@base <http://data.gov.uk/crimes>
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix qb: <http://purl.org/linked-data/cube#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix dcat: <http://www.w3.org/ns/dcat#> .
@prefix datahost: <http://swirrl.com/datahost#>
@prefix csvw: <http://www.w3.org/ns/csvw#> .

# This is the top level aligned dataset. All observations etc are
# coined beneath this documents URI path.
#
# This dataset represents a logical union of its parts.
#
# The parts are individually accessible and describable but also form
# the whole.
#
# NOTE: that though the top-level dataset is a csvw:Table it is
# logically the concatenation of all the CSVWM data. i.e.
# dereferencing this:
#
# $ curl -H 'Accept: text/csv' http://data.gov.uk/crimes
#
# would yield all the CSV data concatenated together in the cube with
# a single common header row.
#
# NOTE: do not worry too much about how the triples in this file are
# created. They may be generated by the platform, related services or
# supplied in some way by the user. Regardless they will be subject to
# strong validation of their accuracy and claims about the world.
#
# Also the triples here are primarily intended to describe the
# mechanics of the system I'm proposing; they may or may not be
# materialised; or may be materialised and may only be materialised if
# required. They're presented here primarily to help describe the
# mechanics of the proposed system in e.g. datahost.
#
# The dataset in this example also shows how it could work if it were
# purely accretative and made only from immutable parts.
#
<> a dcat:Dataset, qb:Dataset, datahost:AlignedDataset, datahost:CompositeDataset, datahost:GrowOnly, csvw:Table ;
    dct:title "Crimes by local authority" ;
    # ... other dcat triples

    # The logical aligned dataset can be constructed from the parts that make it up.
    # These parts are also individual (standalone) representations.
    #
    # NOTE: that we may 'infer' the existence of these triples from
    # the inverse dct:isPartOf. The benefit of doing that is that we
    # may be able to avoid mutating the top level resource, when we
    # add new parts. I quote 'infer' as I don't wish to imply the
    # presence of reasoning or not.

    # Each of these parts may be immutable, and contribute to an
    # accretative grow only dataset. New parts are only accepted as part
    # of the whole after all schema are run.

    dct:hasPart <./doc/2022-slice.csv> ;

    # Each csvwm file will declare a base of:
    # <http://data.gov.uk/id/life-expectancy-by-region-sex-and-time>
    # and coin URIs in terms of the unioning dataset.
    dct:hasPart <./doc/2022-slice.csv-metadata.json> ;

    dct:hasPart <./doc/2021-slice.csv> ;
    dct:hasPart <./doc/2021-slice.csv-metadata.json> ;

    dct:hasPart <./doc/2020-slice.csv> ;
    dct:hasPart <./doc/2020-slice.csv-metadata.json> ;

    dct:hasPart <./doc/some-other-data-defining-this-resource.jsonld> ;

    # datasets can have one or more schema associated with
    # them in an openset of schema languages. We suggest csvw:Schema
    # and shacl:Schema to begin with, but anything else is possible
    # too.
    #
    datahost:hasSchema [
        a csvw:Schema ;
        datahost:schemaLocation <./doc/schema.json>
        ] .




# If the csvm files defined aboutUrl's the idea is that they would all
# then be beneath this base e.g.

<#obs/blah-blah-2022> a qb:Observation ;
    sdmx:refPeriod <http://time-uri/2022> .
    # ...

<#obs/blah-blah-2021> a qb:Observation ;
    sdmx:refPeriod <http://time-uri/2021> .
    # ...

# Each part of the dataset is independently describeable if we require
# e.g.

<./doc/2022-slice.csv>
    a dcat:Distribution ;
    rdfs:label "CSV slice of crimes for 2022" .
